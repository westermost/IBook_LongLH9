@model ReflectionIT.Mvc.Paging.PagingList<IBook.Models.Book>
@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging

<br />

<div class="row">
    @foreach (var product in Model)
    {
        <div class="col-4">
            <div class="card mb-4">
                <a asp-action="Details" asp-controller="Home" class="btn btn-success pull-right btn-outline-info" asp-route-id="@product.BookID">
                    <img class="card-img-top" style="height:509px;" src="@product.ImageUrl" alt="Card Image" />
                </a>
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="btn-group">
                            <label style="font-size:20px; color:#a51313"><b>Giá: @string.Format("{0:0,0}", @product.Price)</b> VNĐ</label>
                        </div>
                        @if (product.Quantities != 0)
                        {
                            <a asp-action="Details" asp-controller="Home" class="btn btn-success pull-right btn-outline-info" asp-route-id="@product.BookID">Xem thêm</a>
                        }
                        else
                        {
                            <a asp-action="Details" asp-controller="Home" class="btn btn-danger btn-outline-danger" asp-route-id="@product.BookID">Hết hàng</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<nav hidden class="col-12 text-center">
    @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model })
</nav>

<ul class="pagination justify-content-center">

    @for (int i = 1; i <= Model.PageCount; i++)
    {
        @if (i == 1 && 1 != Model.PageIndex)
        {
            <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { page =  Model.PageIndex - 1 })">Previous</a></li>
        }


        <li class="@(i == Model.PageIndex ? "page-item active" : "page-item")">
            <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
        </li>

        @if (i == Model.PageCount && i != Model.PageIndex)
        {
            <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { page =  Model.PageIndex + 1 })">Next</a></li>
        }
    }

    </ul>
